<blocks app="NetsBlox 1.14.0, http://netsblox.org" version="1.14.0"><block-definition collabId="item_0_61" s="Upload Work To Gallery" type="command" category="other"><header></header><code></code><inputs></inputs><script><block collabId="item_0_56" s="doDeclareVariables"><list><l>name</l><l>description</l></list></block><block collabId="item_0_52" s="doIf"><block collabId="item_0_51" s="reportLessThan"><block collabId="item_0_50" s="reportStringSize"><block collabId="item_0_49" var="name"/></block><l>2</l><comment collabId="item_0_47" w="159" collapsed="false">See if you can tell what this does...</comment></block><script><block collabId="item_0_45" s="doAsk"><l>Choose a Name or Identifier...</l></block><block collabId="item_0_43" s="doSetVar"><l>name</l><block collabId="item_0_41" s="getLastAnswer"></block></block></script></block><block collabId="item_0_40" s="doIf"><block collabId="item_0_39" s="reportLessThan"><block collabId="item_0_38" s="reportStringSize"><block collabId="item_0_37" var="description"/></block><l>2</l></block><script><block collabId="item_0_34" s="doAsk"><l>Describe your work briefly</l></block><block collabId="item_0_32" s="doSetVar"><l>description</l><block collabId="item_0_30" s="getLastAnswer"></block></block></script></block><block collabId="item_0_29" s="doIfElse"><block collabId="item_0_28" s="reportOr"><block collabId="item_0_27" s="reportLessThan"><block collabId="item_0_26" s="reportStringSize"><block collabId="item_0_25" var="name"/></block><l>2</l><comment collabId="item_0_23" w="159" collapsed="false">See if you can tell what this does...</comment></block><block collabId="item_0_22" s="reportLessThan"><block collabId="item_0_21" s="reportStringSize"><block collabId="item_0_20" var="description"/></block><l>2</l></block></block><script><block collabId="item_0_17" s="doSayFor"><l>Canceled Upload.  Need name and description to be more than 2 chars</l><l>2</l></block></script><script><block collabId="item_0_13" s="doReport"><block collabId="item_0_12" s="evaluate"><block collabId="item_0_11" s="reportJSFunction"><list><l>username</l><l>description</l><l>proc</l></list><l>let config = window.galleryConfig || {};&#xD;let stage = this.parentThatIsA(IDE_Morph).stage;&#xD;let image = new Costume(stage.thumbnail(stage.dimensions)).contents.toDataURL(&apos;image/png&apos;);&#xD;&#xD;let nbm  = window.world.children.find((x) =&gt; x instanceof NetsBloxMorph);&#xD;let data = nbm.serializer.format(&apos;&lt;room name="@" app="@"&gt;%&lt;/room&gt;&apos;, nbm.room.name, nbm.serializer.app, nbm.getSerializedRole());&#xD;&#xD;let headers = {};&#xD;let method  = "POST"&#xD;let bundle  = {&#xD;  &apos;data&apos;:       data&#xD;, &apos;image&apos;:      image&#xD;, &apos;metadata&apos;:   JSON.stringify(Object.assign({ description: config.description || description, uploader: config.username || username }, (Object.keys(config).length &gt; 0) ? { featured: true } : {}))&#xD;, &apos;session-id&apos;: window.externalVariables.locationHash&#xD;};&#xD;&#xD;let makeEntriesFromFormData = function(obj, formData) {&#xD;  for (let key in (obj || {})) {&#xD;    formData.set(key, obj[key]);&#xD;  }&#xD;  return formData.entries();&#xD;};&#xD;&#xD;let makeEntriesShim = function(obj, formElem) {&#xD;&#xD;  let entryMap = new Map()&#xD;&#xD;  if (formElem !== undefined) {&#xD;    Array.from(formElem.querySelectorAll("input[name]")).forEach((elem) =&gt; entryMap.set(elem.name, elem.value));&#xD;  }&#xD;&#xD;  for (let key in (obj || {})) {&#xD;    entryMap.set(key, obj[key]);&#xD;  }&#xD;&#xD;  return Array.from(entryMap.entries());&#xD;&#xD;}&#xD;&#xD;let makeQueryString = function(obj, formElem) {&#xD;  let removeCRs = (str) =&gt; str.replace(/\r/g, &apos;&apos;);&#xD;  let formData  = new FormData(formElem);&#xD;  let entries   = (formData.entries !== undefined) ? makeEntriesFromFormData(obj, formData) : makeEntriesShim(obj, formElem);&#xD;  return Array.from(entries).map(([k, v]) =&gt; encodeURIComponent(k) + "=" + encodeURIComponent(removeCRs(v))).join("&amp;");&#xD;}&#xD;&#xD;var output;&#xD;&#xD;if (!proc.promise) {&#xD;  proc.promise = new Promise(function() {&#xD;    var props = { method: method, headers: Object.assign({}, { "Content-Type": "application/x-www-form-urlencoded" }, headers) };&#xD;    if (method !== "GET") {&#xD;      let params = makeQueryString(bundle);&#xD;      props = Object.assign({}, props, { body: params });&#xD;    }&#xD;    fetch(window.externalVariables.domain + "/uploads", props);&#xD;  }).then(function(response) {&#xD;    response.text().then(function(body) { output = body; });&#xD;  });&#xD;} else {&#xD;  proc.promise = undefined;&#xD;  return output;&#xD;}&#xD;&#xD;proc.pushContext(&apos;doYield&apos;);&#xD;proc.pushContext();&#xD;</l></block><list><block collabId="item_0_4" var="name"/><block collabId="item_0_3" var="description"/></list></block></block></script></block></script><scripts><script x="628.0000009999999" y="1636.8333343333331"><block collabId="item_0" s="errorObsolete"></block></script></scripts></block-definition></blocks>